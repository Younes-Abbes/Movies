// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241107205237_updating database")]
    partial class updatingdatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AspCoreApplication2023.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("memebershipTypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("memebershipTypeId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("AspCoreApplication2023.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("AspCoreApplication2023.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("genre_idId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("genre_idId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("CustomerMovie", b =>
                {
                    b.Property<int>("customersId")
                        .HasColumnType("integer");

                    b.Property<int>("moviesId")
                        .HasColumnType("integer");

                    b.HasKey("customersId", "moviesId");

                    b.HasIndex("moviesId");

                    b.ToTable("CustomerMovie");
                });

            modelBuilder.Entity("WebApplication1.Models.Memebershiptype", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<float>("DiscountRate")
                        .HasColumnType("real");

                    b.Property<int>("DurationInMonth")
                        .HasColumnType("integer");

                    b.Property<int>("SignUpFee")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Memebershiptype");
                });

            modelBuilder.Entity("AspCoreApplication2023.Models.Customer", b =>
                {
                    b.HasOne("WebApplication1.Models.Memebershiptype", "memebershipType")
                        .WithMany("customers")
                        .HasForeignKey("memebershipTypeId");

                    b.Navigation("memebershipType");
                });

            modelBuilder.Entity("AspCoreApplication2023.Models.Movie", b =>
                {
                    b.HasOne("AspCoreApplication2023.Models.Genre", "genre_id")
                        .WithMany("movies")
                        .HasForeignKey("genre_idId");

                    b.Navigation("genre_id");
                });

            modelBuilder.Entity("CustomerMovie", b =>
                {
                    b.HasOne("AspCoreApplication2023.Models.Customer", null)
                        .WithMany()
                        .HasForeignKey("customersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AspCoreApplication2023.Models.Movie", null)
                        .WithMany()
                        .HasForeignKey("moviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AspCoreApplication2023.Models.Genre", b =>
                {
                    b.Navigation("movies");
                });

            modelBuilder.Entity("WebApplication1.Models.Memebershiptype", b =>
                {
                    b.Navigation("customers");
                });
#pragma warning restore 612, 618
        }
    }
}
